/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ListAccounts.java
 *
 * Created on 23/Abr/2011, 16:36:23
 */
package accounts;

import Beans.CurrentAccount;
import Beans.CurrentMovementHistory;
import Beans.SavingsAccount;
import Beans.SavingsMovementHistory;
import DAO.MySQLExceptions.EmptySetException;
import DAO.MysqlDAO.MysqlCurrentAccountDAO;
import DAO.MysqlDAO.MysqlCurrentMovementHistoryDAO;
import DAO.MysqlDAO.MysqlSavingsAccountDAO;
import DAO.MysqlDAO.MysqlSavingsMovementHistoryDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;

/**
 *
 * @author jhorgemiguel
 */
public class ListAccounts extends javax.swing.JFrame {
    private int bankID;
    private MysqlCurrentAccountDAO currentDAO;
    private MysqlSavingsAccountDAO savingsDAO;
    private MysqlCurrentMovementHistoryDAO currentHistoryDAO;
    private MysqlSavingsMovementHistoryDAO savingsHistoryDAO;
    
    /** Creates new form ListAccounts */
    public ListAccounts() {
        initComponents();
    }
    
    public ListAccounts(int BankID){
        this();
        bankID = BankID;
        try {
            initialize(bankID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EmptySetException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void initialize(int BankID) throws ClassNotFoundException, SQLException, EmptySetException{
        currentDAO = new MysqlCurrentAccountDAO();
        savingsDAO = new MysqlSavingsAccountDAO();
        DefaultListModel allAccounts = new DefaultListModel();
        ArrayList<CurrentAccount> allCurrent = currentDAO.findAllCurrentAccounts(BankID);
        ArrayList<SavingsAccount> allSavings = savingsDAO.findAllSavingsAccount(BankID);
        for (CurrentAccount c : allCurrent)
            allAccounts.addElement(c.getCurrentAccountID() + " - Saldo: " + c.getCurrentAmount());
        for (SavingsAccount s : allSavings)
            allAccounts.addElement(s.getSavingsAccountID() + " - Saldo: " + s.getInitialAmount());
        accountsList_lst.setModel(allAccounts);       
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        accountsList_lst = new javax.swing.JList();
        showAccountList_btn = new javax.swing.JButton();
        closeAccountList_btn = new javax.swing.JButton();
        accountHistMov_btn = new javax.swing.JButton();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Principal.PrincipalMenuApp.class).getContext().getResourceMap(ListAccounts.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        accountsList_lst.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Conta Nº - nr. Titulares - Tipo de Conta - Saldo:" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        accountsList_lst.setName("accountsList_lst"); // NOI18N
        jScrollPane1.setViewportView(accountsList_lst);

        showAccountList_btn.setText(resourceMap.getString("showAccountList_btn.text")); // NOI18N
        showAccountList_btn.setName("showAccountList_btn"); // NOI18N
        showAccountList_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAccountList_btnActionPerformed(evt);
            }
        });

        closeAccountList_btn.setText(resourceMap.getString("closeAccountList_btn.text")); // NOI18N
        closeAccountList_btn.setName("closeAccountList_btn"); // NOI18N
        closeAccountList_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeAccountList_btnActionPerformed(evt);
            }
        });

        accountHistMov_btn.setText(resourceMap.getString("accountHistMov_btn.text")); // NOI18N
        accountHistMov_btn.setName("accountHistMov_btn"); // NOI18N
        accountHistMov_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountHistMov_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(accountHistMov_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showAccountList_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeAccountList_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showAccountList_btn)
                    .addComponent(closeAccountList_btn)
                    .addComponent(accountHistMov_btn))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeAccountList_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeAccountList_btnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_closeAccountList_btnActionPerformed

    private void showAccountList_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAccountList_btnActionPerformed
        try {
            // TODO add your handling code here:
            initialize(bankID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EmptySetException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_showAccountList_btnActionPerformed

    private void accountHistMov_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountHistMov_btnActionPerformed
        // TODO add your handling code here:
        String[] data = accountsList_lst.getSelectedValue().toString().split(" - ");
        try {
            historicMovementsAccount(bankID, Integer.valueOf(data[0]));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EmptySetException ex) {
            Logger.getLogger(ListAccounts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_accountHistMov_btnActionPerformed

    
    public void historicMovementsAccount(int bankID, int accountID) throws ClassNotFoundException, SQLException, EmptySetException{
        currentHistoryDAO = new MysqlCurrentMovementHistoryDAO();
        savingsHistoryDAO = new MysqlSavingsMovementHistoryDAO();
        ArrayList<CurrentMovementHistory> historyCurrent;
        ArrayList<SavingsMovementHistory> historySavings;
        historyCurrent = currentHistoryDAO.findAllCurrentMovementHistory(bankID);
        for (CurrentMovementHistory ch : historyCurrent){
            if (ch.getCurrentAccountID() != accountID)
                historyCurrent.remove(ch);
        }
        historySavings = savingsHistoryDAO.findAllSavingsMovementHistory(bankID);
        for (SavingsMovementHistory sh : historySavings){
            if (sh.getSavingsAccountID() != accountID)
                historySavings.remove(sh);
        }    
        JFrame historic = new JFrame("Histórico de conta: " + accountID);
        JList listHist = new JList();
        DefaultListModel lis = new DefaultListModel();
        for (CurrentMovementHistory ch : historyCurrent){
            lis.addElement(ch.getCurrentMovementHistoryID() + " - " + ch.getCurrentAccountID() + " - " + ch.getMovementType()
                    + " - " + ch.getAmountMoved() + " - " + ch.getMovementDate());
        }
        for (SavingsMovementHistory sh : historySavings)
            lis.addElement(sh.getSavingsMovementHistoryID() + " - " + sh.getSavingsAccountID() + " - " + sh.getMovementType()
                    + " - " + sh.getAmountMoved() + " - " + sh.getMovementDate());
        listHist.setModel(lis);
        historic.add(listHist);
        historic.setVisible(true);
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ListAccounts().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accountHistMov_btn;
    private javax.swing.JList accountsList_lst;
    private javax.swing.JButton closeAccountList_btn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton showAccountList_btn;
    // End of variables declaration//GEN-END:variables
}
