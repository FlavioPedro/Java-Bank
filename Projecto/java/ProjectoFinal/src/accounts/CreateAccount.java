/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreateAccount.java
 *
 * Created on 30/Mar/2011, 23:44:38
 */

package accounts;

import Beans.Client;
import Beans.CurrentAccount;
import Beans.Holder;
import Beans.SavingsAccount;
import DAO.MySQLExceptions.UnknownRegistException;
import DAO.MysqlDAO.MysqlClientDAO;
import DAO.MysqlDAO.MysqlCurrentAccountDAO;
import DAO.MysqlDAO.MysqlHolderDAO;
import DAO.MysqlDAO.MysqlSavingsAccountDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author jhorgemiguel
 */
public class CreateAccount extends javax.swing.JFrame {

    private int bankID;
    private Date refDate;
    private MysqlCurrentAccountDAO currentDAO;
    private MysqlSavingsAccountDAO savingsDAO;
    private MysqlClientDAO clientDAO;
    private MysqlHolderDAO holderDAO;
    private int holderNIF;
    private int accountID;
    
    /** Creates new form CreateAccount */
    public CreateAccount() {
        initComponents();
    }

    public CreateAccount(int BankID){
        this();
        bankID = BankID;
    }
    
    public CreateAccount(int BankID, Date refDate){
        this();
        bankID = BankID;
        this.refDate = refDate;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        accountGroup_cmb = new javax.swing.JComboBox();
        accountType_cmb = new javax.swing.JComboBox();
        accountInitialAmount_txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        accountHolderNIF_txt = new javax.swing.JTextField();
        findHolder_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        accountClientsList_lst = new javax.swing.JList();
        accountHolderAssociation_btn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        accountHolderID_txt = new javax.swing.JTextField();
        findCurrentAccount_btn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        currentAccountList_lst = new javax.swing.JList();
        createAccount_btn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        currentAccountNumber_txt = new javax.swing.JTextField();
        accountID_txt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Principal.PrincipalMenuApp.class).getContext().getResourceMap(CreateAccount.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        accountGroup_cmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ordem", "Prazo" }));
        accountGroup_cmb.setToolTipText(resourceMap.getString("cmb_accountGroup.toolTipText")); // NOI18N
        accountGroup_cmb.setName("cmb_accountGroup"); // NOI18N
        accountGroup_cmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                accountGroup_cmbItemStateChanged(evt);
            }
        });

        accountType_cmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Simples", "Gold" }));
        accountType_cmb.setEnabled(false);
        accountType_cmb.setName("cmb_accountType"); // NOI18N

        accountInitialAmount_txt.setText(resourceMap.getString("txt_InitialBalance.text")); // NOI18N
        accountInitialAmount_txt.setName("txt_InitialBalance"); // NOI18N
        accountInitialAmount_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountInitialAmount_txtActionPerformed(evt);
            }
        });
        accountInitialAmount_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                accountInitialAmount_txtKeyTyped(evt);
            }
        });

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jLabel5.setText(resourceMap.getString("lbl_clientNr.text")); // NOI18N
        jLabel5.setName("lbl_clientNr"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        accountHolderNIF_txt.setText(resourceMap.getString("txt_clientID.text")); // NOI18N
        accountHolderNIF_txt.setName("txt_clientID"); // NOI18N
        accountHolderNIF_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountHolderNIF_txtActionPerformed(evt);
            }
        });

        findHolder_btn.setText(resourceMap.getString("btn_findClient.text")); // NOI18N
        findHolder_btn.setName("btn_findClient"); // NOI18N
        findHolder_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findHolder_btnActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        accountClientsList_lst.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "cliente1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        accountClientsList_lst.setName("lst_clientList"); // NOI18N
        accountClientsList_lst.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                accountClientsList_lstValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(accountClientsList_lst);

        accountHolderAssociation_btn.setText(resourceMap.getString("btn_associateClient.text")); // NOI18N
        accountHolderAssociation_btn.setEnabled(false);
        accountHolderAssociation_btn.setName("btn_associateClient"); // NOI18N
        accountHolderAssociation_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountHolderAssociation_btnActionPerformed(evt);
            }
        });

        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        accountHolderID_txt.setName("accountHolderID_txt"); // NOI18N
        accountHolderID_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountHolderID_txtActionPerformed(evt);
            }
        });
        accountHolderID_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                accountHolderID_txtKeyTyped(evt);
            }
        });

        findCurrentAccount_btn.setText(resourceMap.getString("findCurrentAccount_btn.text")); // NOI18N
        findCurrentAccount_btn.setName("findCurrentAccount_btn"); // NOI18N
        findCurrentAccount_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCurrentAccount_btnActionPerformed(evt);
            }
        });

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        currentAccountList_lst.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Conta1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        currentAccountList_lst.setName("currentAccountList_lst"); // NOI18N
        currentAccountList_lst.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                currentAccountList_lstValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(currentAccountList_lst);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(accountHolderNIF_txt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(findHolder_btn))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, accountHolderAssociation_btn)
                    .add(jLabel5)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel9)
                        .add(18, 18, 18)
                        .add(accountHolderID_txt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(findCurrentAccount_btn))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
                .add(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel5)
                .add(14, 14, 14)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(accountHolderNIF_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(findHolder_btn))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(accountHolderID_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel9)
                    .add(findCurrentAccount_btn))
                .add(18, 18, 18)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(33, 33, 33)
                .add(accountHolderAssociation_btn)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        createAccount_btn.setText(resourceMap.getString("createAccount_btn.text")); // NOI18N
        createAccount_btn.setEnabled(false);
        createAccount_btn.setName("createAccount_btn"); // NOI18N
        createAccount_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccount_btnActionPerformed(evt);
            }
        });

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        currentAccountNumber_txt.setText(resourceMap.getString("currentAccountNumber_txt.text")); // NOI18N
        currentAccountNumber_txt.setEnabled(false);
        currentAccountNumber_txt.setName("currentAccountNumber_txt"); // NOI18N

        accountID_txt.setName("accountID_txt"); // NOI18N
        accountID_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountID_txtActionPerformed(evt);
            }
        });
        accountID_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                accountID_txtKeyTyped(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel1))
                        .add(50, 50, 50)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(accountType_cmb, 0, 176, Short.MAX_VALUE)
                            .add(accountGroup_cmb, 0, 176, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel8)
                        .add(18, 18, 18)
                        .add(currentAccountNumber_txt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                    .add(createAccount_btn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 129, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(jLabel6))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, accountID_txt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(accountInitialAmount_txt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                .add(4, 4, 4)
                                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(31, 31, 31)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(accountGroup_cmb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(accountType_cmb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(accountID_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .add(13, 13, 13)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(accountInitialAmount_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(currentAccountNumber_txt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(createAccount_btn)
                .addContainerGap(62, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accountHolderNIF_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountHolderNIF_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountHolderNIF_txtActionPerformed

    private void accountGroup_cmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_accountGroup_cmbItemStateChanged
        if (accountGroup_cmb.getSelectedItem().toString() == "Prazo"){
            accountType_cmb.setEnabled(true);
            currentAccountNumber_txt.setEnabled(true);
        }else{
            accountType_cmb.setEnabled(false); 
            currentAccountNumber_txt.setEnabled(false);
        }
    }//GEN-LAST:event_accountGroup_cmbItemStateChanged

    private void accountInitialAmount_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountInitialAmount_txtActionPerformed
        // TODO add your handling code here:       
    }//GEN-LAST:event_accountInitialAmount_txtActionPerformed

    private void accountInitialAmount_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accountInitialAmount_txtKeyTyped
        // TODO add your handling code here:
        if (!accountInitialAmount_txt.getText().isEmpty())
            createAccount_btn.setEnabled(true);
        else
            createAccount_btn.setEnabled(false);
    }//GEN-LAST:event_accountInitialAmount_txtKeyTyped

    private void accountClientsList_lstValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_accountClientsList_lstValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_accountClientsList_lstValueChanged

    private void createAccount_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccount_btnActionPerformed
        // TODO add your handling code here:
        if (accountGroup_cmb.getSelectedItem().toString() == "Ordem")
            try {
                currentAccountCreation();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);    
        } catch (SQLException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        else if ((accountGroup_cmb.getSelectedItem().toString() == "Prazo") &&
                (accountType_cmb.getSelectedItem().toString() == "Simples"))
            try {
            simpleSavingsAccountCreation();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        else if ((accountGroup_cmb.getSelectedItem().toString() == "Prazo") &&
                (accountType_cmb.getSelectedItem().toString() == "Gold"))
            try {
            goldSavingsAccountCreation();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_createAccount_btnActionPerformed

    private void accountID_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountID_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountID_txtActionPerformed

    private void accountID_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accountID_txtKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_accountID_txtKeyTyped

    private void accountHolderID_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountHolderID_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountHolderID_txtActionPerformed

    private void accountHolderID_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_accountHolderID_txtKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_accountHolderID_txtKeyTyped

    private void accountHolderAssociation_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountHolderAssociation_btnActionPerformed
        try {
            // TODO add your handling code here:
            accountAssociation();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_accountHolderAssociation_btnActionPerformed

    private void currentAccountList_lstValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_currentAccountList_lstValueChanged
        // TODO add your handling code here:
        if (!accountClientsList_lst.isSelectionEmpty()){
            accountHolderAssociation_btn.setEnabled(true);
        }
    }//GEN-LAST:event_currentAccountList_lstValueChanged

    private void findHolder_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findHolder_btnActionPerformed
        Client clientFound = null;
        try {
            // TODO add your handling code here:
            clientDAO = new MysqlClientDAO();
            clientFound = clientDAO.findClient(Integer.parseInt(accountHolderNIF_txt.getText()));
        } catch (UnknownRegistException ex) {
                Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultListModel clientToHold = new DefaultListModel();
        clientToHold.addElement(clientFound.getClientNIF() + " - " + getName());
        accountClientsList_lst.setModel(clientToHold);
        holderNIF = clientFound.getClientNIF();
    }//GEN-LAST:event_findHolder_btnActionPerformed

    private void findCurrentAccount_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCurrentAccount_btnActionPerformed
        CurrentAccount accountFound = null;
        try {
            // TODO add your handling code here:
            currentDAO = new MysqlCurrentAccountDAO();
            accountFound = currentDAO.findCurrentAccountByID(Integer.parseInt(accountHolderID_txt.getText()));
        } catch (UnknownRegistException ex) {
                Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CreateAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultListModel accountToHold = new DefaultListModel();
        try{
            accountToHold.addElement(accountFound.getCurrentAccountID());
            accountClientsList_lst.setModel(accountToHold);
            accountID = accountFound.getCurrentAccountID();
        } catch(NullPointerException nu){
            Logger.getAnonymousLogger(nu.toString());
        } finally{
            JOptionPane.showMessageDialog(null, "Can not find this account", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_findCurrentAccount_btnActionPerformed

    public void currentAccountCreation() throws SQLException, ClassNotFoundException{
        CurrentAccount current = new CurrentAccount(Integer.valueOf(accountID_txt.getText()), bankID,
                refDate, Integer.valueOf(accountInitialAmount_txt.getText()),
                Integer.valueOf(accountInitialAmount_txt.getText()));
        currentDAO = new MysqlCurrentAccountDAO();
        if (currentDAO.insertCurrentAccount(current))
            JOptionPane.showMessageDialog(null, "Account created", "Creating account", JOptionPane.OK_OPTION);
        else
            JOptionPane.showMessageDialog(null, "Account not created", "Creating account", JOptionPane.ERROR_MESSAGE);
    }
    
    public void simpleSavingsAccountCreation() throws ClassNotFoundException, SQLException{
        SavingsAccount savings = new SavingsAccount(Integer.valueOf(accountID_txt.getText()), 
                Integer.valueOf(currentAccountNumber_txt.getText()),
                1, refDate , Double.valueOf(accountInitialAmount_txt.getText()));
        savingsDAO = new MysqlSavingsAccountDAO();
        if (savingsDAO.insertSavingsAccount(savings))
            JOptionPane.showMessageDialog(null, "Account created", "Creating account", JOptionPane.OK_OPTION);
        else
            JOptionPane.showMessageDialog(null, "Account not created", "Creating account", JOptionPane.ERROR_MESSAGE);
    }
    
    public void goldSavingsAccountCreation() throws ClassNotFoundException, SQLException{
        SavingsAccount savings = new SavingsAccount(Integer.valueOf(accountID_txt.getText()), 
                Integer.valueOf(currentAccountNumber_txt.getText()),
                2, refDate, Double.valueOf(accountInitialAmount_txt.getText()));
        savingsDAO = new MysqlSavingsAccountDAO();
        if (savingsDAO.insertSavingsAccount(savings))
            JOptionPane.showMessageDialog(null, "Account created", "Creating account", JOptionPane.OK_OPTION);
        else
            JOptionPane.showMessageDialog(null, "Account not created", "Creating account", JOptionPane.ERROR_MESSAGE);
    }
    
    public void accountAssociation() throws ClassNotFoundException, SQLException{
        Holder titular = new Holder((holderNIF + accountID)/9000000
                , holderNIF, accountID, refDate);
        holderDAO = new MysqlHolderDAO();
        if (holderDAO.insertHolder(titular))
            JOptionPane.showMessageDialog(null, "Holder associated.", "Associating account", JOptionPane.OK_OPTION);
        else
            JOptionPane.showMessageDialog(null, "Holder not associated", "Associating account", JOptionPane.ERROR_MESSAGE);
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList accountClientsList_lst;
    private javax.swing.JComboBox accountGroup_cmb;
    private javax.swing.JButton accountHolderAssociation_btn;
    private javax.swing.JTextField accountHolderID_txt;
    private javax.swing.JTextField accountHolderNIF_txt;
    private javax.swing.JTextField accountID_txt;
    private javax.swing.JTextField accountInitialAmount_txt;
    private javax.swing.JComboBox accountType_cmb;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton createAccount_btn;
    private javax.swing.JList currentAccountList_lst;
    private javax.swing.JTextField currentAccountNumber_txt;
    private javax.swing.JButton findCurrentAccount_btn;
    private javax.swing.JButton findHolder_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
